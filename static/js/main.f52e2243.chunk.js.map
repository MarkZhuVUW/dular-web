{"version":3,"sources":["contexts/LocaleContext.ts","contexts/LocalStorageContext.ts","providers/LocalStorageProvider.tsx","contexts/ThemeContext.ts","constants/LocalStorageKeys.ts","providers/LocaleProvider.tsx","providers/AccessTokenProvider.tsx","themes/Dark.ts","themes/Light.ts","providers/ThemeProvider.tsx","contexts/RouteContext.ts","providers/RouteProvider.tsx","providers/Auth0Provider.tsx","components/select/Locale.tsx","components/select/Theme.tsx","components/common/Menu.tsx","components/common/Layout.tsx","components/common/Loading.tsx","components/common/Message.tsx","contexts/AccessTokenContext.ts","containers/debug/LocaleDebug.tsx","containers/debug/LocalStorageDebug.tsx","containers/debug/AccessToken.tsx","containers/debug/index.tsx","containers/index.tsx","index.tsx"],"names":["Locale","LocalStorageContext","createContext","keys","console","warn","getItem","key","getItemOrDefault","defaultValue","setItem","value","removeItem","useLocalStorage","useContext","localStorage","window","LocalStorageProvider","children","payload","JSON","parse","e","message","Provider","result","i","length","push","stringify","Theme","LocaleContext","locale","enUS","setLocale","t","text","useLocale","localeMap","zhCN","zhTW","LocaleProvider","useState","LocalStorageKeys","setLocaleState","Component","ThemeContext","theme","Dark","setTheme","dark","createMuiTheme","palette","type","background","default","primary","main","light","contrastText","secondary","ThemeProvider","prefersDarkMode","useMediaQuery","Light","setThemeState","muiTheme","muiThemeDark","muiThemeLight","CssBaseline","RouteContext","current","location","hash","replace","makeRoutes","routes","debug","redirect","path","useRoute","RouteProviderContent","history","useHistory","url","useRouteMatch","Object","map","ChildrenComponent","ChildrenComponentWrapper","params","useParams","join","exact","RouteProvider","Auth0Provider","domain","process","clientId","redirectUri","origin","onRedirectCallback","callbackUrl","info","assign","ALL_LOCALES","StyledTranslateIcon","styled","TranslateIcon","StyledButton","Button","SelectLocale","anchorEl","setAnchorEl","handleClose","aria-haspopup","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","filter","x","handleClickItem","StyledIconButton","IconButton","SelectTheme","StyledCollapse","Collapse","MenuItem","item","hasChildren","undefined","defaultOpen","setOpen","ListItem","button","icon","ListItemIcon","ListItemText","title","in","timeout","unmountOnExit","List","component","disablePadding","subItem","Menu","items","StyledDrawer","Drawer","DrawerMenu","anchor","StyledTypography","Typography","StyledContainer","Container","DefaultLayout","menuItems","menuOpen","setMenuOpen","AppBar","Toolbar","DefaultLoading","ErrorMessage","AccessTokenContext","accessToken","FetchAccessToken","getAccessTokenSilently","useAuth0","setResult","useEffect","a","audience","error","errorMessage","fetchAccessToken","AccessTokenProvider","isLoading","isAuthenticated","loginWithRedirect","log","href","StyledPaper","Paper","LocaleDebug","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","LocalStorageDebug","AccessToken","DebugContent","DebugWithAccessToken","props","Home","App","Debug","flowRight","Containers","render","document","getElementById"],"mappings":"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","file":"static/js/main.f52e2243.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport enum Locale {\n  enUS = \"en_US\",\n  zhCN = \"zh_CN\",\n  zhTW = \"zh_TW\",\n}\n\nexport type LocaleContextType = {\n  locale: Locale;\n  setLocale: (locale: Locale) => void;\n  t: (text: string) => string;\n};\n\nexport const LocaleContext = createContext<LocaleContextType>({\n  locale: Locale.enUS,\n  setLocale: (locale) => {\n    console.warn(`Failed to set locale = ${locale}, no locale provider`);\n  },\n  t: (text) => {\n    console.warn(`Failed to translate text = ${text}, no locale provider`);\n    return text;\n  },\n});\n\nexport const useLocale = () => useContext(LocaleContext);\n","import { createContext, useContext } from \"react\";\n\nexport type LocalStorageContextType = {\n  keys: () => string[];\n  getItem: (key: string) => any;\n  getItemOrDefault: (key: string, defaultValue: any) => any;\n  setItem: (key: string, value: any) => void;\n  removeItem: (key: string) => void;\n};\n\nexport const LocalStorageContext = createContext<LocalStorageContextType>({\n  keys: () => {\n    console.warn(\"Failed to get keys, no local storage provider\");\n    return [];\n  },\n  getItem: (key) => {\n    console.warn(\n      `Failed to find item with key = ${key}, no local storage provider`\n    );\n    return null;\n  },\n  getItemOrDefault: (key, defaultValue = null) => {\n    console.warn(\n      `Failed to find item with key = ${key}, no local storage provider`\n    );\n    return defaultValue;\n  },\n  setItem: (key, value) => {\n    console.warn(\n      `Failed to set item with key = ${key} and value = ${value}, not local storage provider`\n    );\n  },\n  removeItem: (key) => {\n    console.warn(\n      `Failed to remove item with key = ${key}, no local storage provider`\n    );\n  },\n});\n\nexport const useLocalStorage = () => useContext(LocalStorageContext);\n","import { FC, ComponentType } from \"react\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\n\nconst localStorage = window.localStorage;\n\nexport const LocalStorageProvider: FC = ({ children }) => {\n  const keys = () => {\n    const result: string[] = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      result.push(localStorage.key(i) as string);\n    }\n    return result;\n  };\n\n  const getItemOrDefault = (key: string, defaultValue: any = null) => {\n    try {\n      const payload = localStorage.getItem(key);\n      if (payload === null) {\n        return defaultValue;\n      }\n      return JSON.parse(payload);\n    } catch (e) {\n      console.warn(`Failed to get item with key = ${key}, ${e.message}`);\n      return defaultValue;\n    }\n  };\n\n  const getItem = (key: string) => getItemOrDefault(key);\n\n  const setItem = (key: string, value: any) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const removeItem = (key: string) => {\n    localStorage.removeItem(key);\n  };\n\n  return (\n    <LocalStorageContext.Provider\n      value={{ keys, getItem, getItemOrDefault, setItem, removeItem }}\n    >\n      {children}\n    </LocalStorageContext.Provider>\n  );\n};\n\nexport const withLocalStorage = <PropsType extends object>(\n  Component: ComponentType<PropsType>\n): FC<PropsType> => (props: PropsType) => (\n  <LocalStorageProvider>\n    <Component {...props} />\n  </LocalStorageProvider>\n);\n","import { createContext, useContext } from \"react\";\n\nexport enum Theme {\n  Dark = \"dark\",\n  Light = \"light\",\n}\n\nexport type ThemeContextType = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nexport const ThemeContext = createContext<ThemeContextType>({\n  theme: Theme.Dark,\n  setTheme: (theme) => {\n    console.warn(`Failed to set theme = ${theme}, no theme provider`);\n  },\n});\n\nexport const useTheme = () => useContext(ThemeContext);\n","export default {\n  LOCALE: \"locale\",\n  THEME: \"theme\",\n  AUTH0_CALLBACK_URL: \"auth0_callback_url\",\n};\n","import { useState, FC, ComponentType } from \"react\";\nimport { Locale, LocaleContext } from \"../contexts/LocaleContext\";\nimport { useLocalStorage } from \"../contexts/LocalStorageContext\";\nimport LocalStorageKeys from \"../constants/LocalStorageKeys\";\n\nimport enUS from \"../locales/en_US.json\";\nimport zhCN from \"../locales/zh_CN.json\";\nimport zhTW from \"../locales/zh_TW.json\";\n\nexport const localeMap: { [key: string]: { [key: string]: string } } = {\n  [Locale.enUS]: enUS,\n  [Locale.zhCN]: zhCN,\n  [Locale.zhTW]: zhTW,\n};\n\nexport const LocaleProvider: FC = ({ children }) => {\n  const { getItemOrDefault, setItem } = useLocalStorage();\n\n  const [locale, setLocaleState] = useState(\n    getItemOrDefault(LocalStorageKeys.LOCALE, Locale.enUS)\n  );\n\n  const setLocale = (locale: Locale) => {\n    setItem(LocalStorageKeys.LOCALE, locale);\n    setLocaleState(locale);\n  };\n\n  const t = (text: string) => localeMap[locale][text];\n\n  return (\n    <LocaleContext.Provider value={{ locale, setLocale, t }}>\n      {children}\n    </LocaleContext.Provider>\n  );\n};\n\nexport const withLocale = <PropsType extends object>(\n  Component: ComponentType<PropsType>\n): FC<PropsType> => (props: PropsType) => (\n  <LocaleProvider>\n    <Component {...props} />\n  </LocaleProvider>\n);\n","import { useState, useEffect, FC, ComponentType } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { DefaultLoading } from \"../components/common/Loading\";\nimport { ErrorMessage } from \"../components/common/Message\";\nimport { useLocalStorage } from \"../contexts/LocalStorageContext\";\nimport { AccessTokenContext } from \"../contexts/AccessTokenContext\";\nimport LocalStorageKeys from \"../constants/LocalStorageKeys\";\n\ntype FetchAccessTokenResult = {\n  accessToken?: string;\n  errorMessage?: string;\n};\n\nconst FetchAccessToken: FC = ({ children }) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [result, setResult] = useState<FetchAccessTokenResult | null>(null);\n\n  useEffect(() => {\n    const fetchAccessToken = async () => {\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n        });\n        setResult({ accessToken });\n      } catch (e) {\n        console.error(`Failed to get access token silently, ${e.message}`);\n        setResult({\n          errorMessage: e.message,\n        });\n      }\n    };\n\n    if (result === null) {\n      fetchAccessToken();\n    }\n  });\n\n  if (result === null) {\n    return <DefaultLoading />;\n  }\n\n  if (result.errorMessage) {\n    return <ErrorMessage message={result.errorMessage as string} />;\n  }\n\n  return (\n    <AccessTokenContext.Provider\n      value={{ accessToken: result.accessToken as string }}\n    >\n      {children}\n    </AccessTokenContext.Provider>\n  );\n};\n\nconst AccessTokenProvider: FC = ({ children }) => {\n  const localStorage = useLocalStorage();\n\n  const { isLoading, error, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  if (isLoading) {\n    return <DefaultLoading />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error.message} />;\n  }\n\n  if (!isAuthenticated) {\n    console.log(`Perform login with redirect from ${window.location.href}`);\n    localStorage.setItem(\n      LocalStorageKeys.AUTH0_CALLBACK_URL,\n      window.location.href\n    );\n    loginWithRedirect({\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n    });\n    return <DefaultLoading />;\n  }\n\n  return <FetchAccessToken>{children}</FetchAccessToken>;\n};\n\nexport const withAccessToken = <PropsType extends object>(\n  Component: ComponentType<PropsType>\n): FC<PropsType> => (props: PropsType) => (\n  <AccessTokenProvider>\n    <Component {...props} />\n  </AccessTokenProvider>\n);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst dark = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"rgb(33, 33, 33)\",\n    },\n    primary: {\n      main: \"rgb(51, 51, 51)\",\n    },\n  },\n});\n\nexport default dark;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst light = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#002884\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nexport default light;\n","import { FC, useState, ComponentType } from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Theme, ThemeContext } from \"../contexts/ThemeContext\";\nimport { useLocalStorage } from \"../contexts/LocalStorageContext\";\nimport LocalStorageKeys from \"../constants/LocalStorageKeys\";\n\nimport muiThemeDark from \"../themes/Dark\";\nimport muiThemeLight from \"../themes/Light\";\n\nexport const ThemeProvider: FC = ({ children }) => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const { getItemOrDefault, setItem } = useLocalStorage();\n\n  const [theme, setThemeState] = useState(\n    getItemOrDefault(\n      LocalStorageKeys.THEME,\n      prefersDarkMode ? Theme.Dark : Theme.Light\n    )\n  );\n\n  const setTheme = (theme: Theme) => {\n    setItem(LocalStorageKeys.THEME, theme);\n    setThemeState(theme);\n  };\n\n  const muiTheme = theme === Theme.Dark ? muiThemeDark : muiThemeLight;\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ theme, setTheme }}>\n        <CssBaseline />\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport const withTheme = <PropsType extends object>(\n  Component: ComponentType<PropsType>\n): FC<PropsType> => (props: PropsType) => (\n  <ThemeProvider>\n    <Component {...props} />\n  </ThemeProvider>\n);\n","import { createContext, useContext, ReactElement } from \"react\";\n\nexport type RouteParams = {\n  [key: string]: string;\n};\n\nexport interface IRouteComponent {\n  (params: RouteParams): ReactElement | null;\n}\n\nexport type RouteContextType = {\n  current: () => string;\n  makeRoutes: (routes: {\n    [key: string]: IRouteComponent;\n  }) => ReactElement | null;\n  redirect: (path: string) => void;\n};\n\nexport const RouteContext = createContext<RouteContextType>({\n  current: () => {\n    return window.location.hash.replace(/^#/, \"\");\n  },\n  makeRoutes: (routes: { [key: string]: IRouteComponent }) => {\n    console.warn(`Failed to make routes, no route provider`);\n    console.debug(\"routes\", routes);\n    return null;\n  },\n  redirect: (path: string) => {\n    console.warn(`Failed to redirect to ${path}, no route provider`);\n  },\n});\n\nexport const useRoute = () => useContext(RouteContext);\n\nexport const makeRoutes = (routes: { [key: string]: IRouteComponent }) =>\n  useRoute().makeRoutes(routes);\n","import { FC, ComponentType } from \"react\";\nimport {\n  Switch,\n  Route,\n  HashRouter,\n  useRouteMatch,\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport { RouteContext, IRouteComponent } from \"../contexts/RouteContext\";\nimport { join } from \"path\";\n\nconst RouteProviderContent: FC = ({ children }) => {\n  const current = () => window.location.hash.replace(/^#/, \"\");\n\n  const makeRoutes = (routes: { [key: string]: IRouteComponent }) => {\n    const { url } = useRouteMatch();\n\n    return (\n      <Switch>\n        {Object.keys(routes).map((key) => {\n          const ChildrenComponent = routes[key];\n\n          const ChildrenComponentWrapper: FC = () => {\n            const params = useParams();\n            return <ChildrenComponent {...params} />;\n          };\n\n          return (\n            <Route key={key} path={join(url, key)} exact={key === \"/\"}>\n              <ChildrenComponentWrapper />\n            </Route>\n          );\n        })}\n        <Route key={404} path=\"*\">\n          <div>404</div>\n        </Route>\n      </Switch>\n    );\n  };\n\n  const history = useHistory();\n\n  const redirect = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <RouteContext.Provider value={{ current, makeRoutes, redirect }}>\n      {children}\n    </RouteContext.Provider>\n  );\n};\n\nexport const RouteProvider: FC = ({ children }) => (\n  <HashRouter>\n    <RouteProviderContent>{children}</RouteProviderContent>\n  </HashRouter>\n);\n\nexport const withRoute = <PropsType extends object>(\n  Component: ComponentType<PropsType>\n): FC<PropsType> => (props: PropsType) => (\n  <RouteProvider>\n    <Component {...props} />\n  </RouteProvider>\n);\n","import { FC, ComponentType } from \"react\";\nimport { Auth0Provider as Auth0ProviderInternal } from \"@auth0/auth0-react\";\nimport { useLocalStorage } from \"../contexts/LocalStorageContext\";\nimport LocalStorageKeys from \"../constants/LocalStorageKeys\";\n\nexport const Auth0Provider: FC = ({ children }) => {\n  const localStorage = useLocalStorage();\n\n  const handleRedirectCallback = () => {\n    const callbackUrl = localStorage.getItem(\n      LocalStorageKeys.AUTH0_CALLBACK_URL\n    );\n\n    if (callbackUrl !== null) {\n      console.info(\n        `Auth0 callback URL detected, redirecting to ${callbackUrl}`\n      );\n      localStorage.removeItem(LocalStorageKeys.AUTH0_CALLBACK_URL);\n      window.location.assign(callbackUrl);\n    }\n  };\n\n  return (\n    <Auth0ProviderInternal\n      domain={process.env.REACT_APP_AUTH0_DOMAIN as string}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID as string}\n      redirectUri={window.location.origin}\n      onRedirectCallback={handleRedirectCallback}\n    >\n      {children}\n    </Auth0ProviderInternal>\n  );\n};\n\nexport const withAuth0 = <PropsType extends object>(\n  Component: ComponentType<PropsType>\n): FC<PropsType> => (props: PropsType) => (\n  <Auth0Provider>\n    <Component {...props} />\n  </Auth0Provider>\n);\n","import { MouseEvent, useState, FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Locale, useLocale } from \"../../contexts/LocaleContext\";\n\nconst ALL_LOCALES = [Locale.enUS, Locale.zhCN, Locale.zhTW];\n\nconst StyledTranslateIcon = styled(TranslateIcon)`\n  margin-right: 5px;\n`;\n\nconst StyledButton = styled(Button)`\n  color: inherit;\n`;\n\nconst SelectLocale: FC = () => {\n  const { locale, setLocale, t } = useLocale();\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClickItem = (locale: Locale) => {\n    setLocale(locale);\n    handleClose();\n  };\n\n  return (\n    <div>\n      <StyledButton aria-haspopup={true} onClick={handleClick}>\n        <StyledTranslateIcon /> {t(locale)} <ExpandMoreIcon />\n      </StyledButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {ALL_LOCALES.filter((x) => x !== locale).map((locale) => (\n          <MenuItem key={locale} onClick={() => handleClickItem(locale)}>\n            {t(locale)}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default SelectLocale;\n","import { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Theme, useTheme } from \"../../contexts/ThemeContext\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\n\nconst StyledIconButton = styled(IconButton)`\n  color: inherit;\n`;\n\nconst SelectTheme: FC = () => {\n  const { theme, setTheme } = useTheme();\n\n  const switchTheme = () => {\n    setTheme(theme === Theme.Light ? Theme.Dark : Theme.Light);\n  };\n\n  return (\n    <StyledIconButton onClick={switchTheme}>\n      {theme === Theme.Light ? <WbSunnyIcon /> : <NightsStayIcon />}\n    </StyledIconButton>\n  );\n};\n\nexport default SelectTheme;\n","import { ReactElement, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useRoute } from \"contexts/RouteContext\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nexport type MenuItemType = {\n  path: string;\n  icon?: ReactElement;\n  title: string;\n  onClick?: () => void;\n  children?: Array<MenuItemType>;\n  defaultOpen?: boolean;\n};\n\nconst StyledCollapse = styled(Collapse)`\n  padding-left: 1rem;\n`;\n\nexport const MenuItem = ({ item }: { item: MenuItemType }) => {\n  const hasChildren = item.children !== undefined && item.children.length > 0;\n\n  const [open, setOpen] = useState(item.defaultOpen === true);\n  const { redirect } = useRoute();\n\n  const onClick = () => {\n    if (hasChildren) {\n      setOpen(!open);\n    } else {\n      if (item.onClick !== undefined) {\n        item.onClick();\n      } else {\n        redirect(item.path);\n      }\n    }\n  };\n\n  return (\n    <>\n      <ListItem button onClick={onClick}>\n        {item.icon !== undefined && <ListItemIcon>{item.icon}</ListItemIcon>}\n        <ListItemText primary={item.title} />\n        {hasChildren && (open ? <ExpandLess /> : <ExpandMore />)}\n      </ListItem>\n      {hasChildren && (\n        <StyledCollapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {(item.children || []).map((subItem) => (\n              <MenuItem key={subItem.path} item={subItem} />\n            ))}\n          </List>\n        </StyledCollapse>\n      )}\n    </>\n  );\n};\n\nexport const Menu = ({ items = [] }: { items: Array<MenuItemType> }) => (\n  <List>\n    {items.map((item) => (\n      <MenuItem key={item.path} item={item} />\n    ))}\n  </List>\n);\n\nconst StyledDrawer = styled(Drawer)`\n  .MuiDrawer-paper {\n    min-width: 15rem;\n  }\n`;\n\nexport const DrawerMenu = ({\n  anchor = \"left\",\n  open = true,\n  items = [],\n  onClose = () => null,\n}: {\n  open?: boolean;\n  anchor?: \"top\" | \"left\" | \"bottom\" | \"right\";\n  items: Array<MenuItemType>;\n  onClose?: () => void;\n}) => (\n  <StyledDrawer anchor={anchor} open={open} onClose={onClose}>\n    <Menu items={items} />\n  </StyledDrawer>\n);\n","import { ReactElement, useState } from \"react\";\nimport { useLocale } from \"contexts/LocaleContext\";\nimport styled from \"@emotion/styled\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Container from \"@material-ui/core/Container\";\nimport SelectLocale from \"components/select/Locale\";\nimport SelectTheme from \"components/select/Theme\";\nimport { MenuItemType, DrawerMenu } from \"components/common/Menu\";\n\nconst StyledIconButton = styled(IconButton)`\n  color: inherit;\n`;\n\nconst StyledTypography = styled(Typography)`\n  flex: 1;\n`;\n\nconst StyledContainer = styled(Container)`\n  padding-top: 100px;\n`;\n\nexport const DefaultLayout = ({\n  title = \"app_name\",\n  menuItems = [],\n  children,\n}: {\n  title?: string;\n  menuItems?: Array<MenuItemType>;\n  children: ReactElement;\n}) => {\n  const { t } = useLocale();\n  const [menuOpen, setMenuOpen] = useState(false);\n  return (\n    <>\n      <AppBar>\n        <Toolbar>\n          <StyledIconButton onClick={() => setMenuOpen(true)}>\n            <MenuIcon />\n          </StyledIconButton>\n          <StyledTypography>{t(title)}</StyledTypography>\n          <SelectLocale />\n          <SelectTheme />\n        </Toolbar>\n      </AppBar>\n      <DrawerMenu\n        items={menuItems}\n        open={menuOpen}\n        onClose={() => setMenuOpen(false)}\n      />\n      <StyledContainer>{children}</StyledContainer>\n    </>\n  );\n};\n","// import Backdrop from \"@material-ui/core/Backdrop\";\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n//\n// export const DefaultLoading = () => (\n//   <Backdrop open={true}>\n//     <CircularProgress color=\"inherit\" />\n//   </Backdrop>\n// );\n\nexport const DefaultLoading = () => <div>Loading</div>;\n","export const ErrorMessage = ({ message }: { message: string }) => (\n  <div>{message}</div>\n);\n","import { createContext, useContext } from \"react\";\n\nexport type AccessTokenContextType = {\n  accessToken: string | null;\n};\n\nexport const AccessTokenContext = createContext<AccessTokenContextType>({\n  accessToken: null,\n});\n\nexport const useAccessToken = () => useContext(AccessTokenContext);\n","import Table from \"@material-ui/core/Table\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useLocale } from \"contexts/LocaleContext\";\nimport { localeMap } from \"providers/LocaleProvider\";\nimport styled from \"@emotion/styled\";\n\nconst StyledPaper = styled(Paper)`\n  overflow: hidden;\n`;\n\nconst LocaleDebug = () => {\n  const { locale, t } = useLocale();\n  const map = localeMap[locale];\n\n  return (\n    <StyledPaper>\n      <Toolbar>\n        <Typography>{t(\"locale_data\")}</Typography>\n      </Toolbar>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"key\")}</TableCell>\n              <TableCell>{t(\"value\")}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.keys(map).map((key) => (\n              <TableRow key={key}>\n                <TableCell>{key}</TableCell>\n                <TableCell>{map[key]}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </StyledPaper>\n  );\n};\n\nexport default LocaleDebug;\n","import Table from \"@material-ui/core/Table\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useLocalStorage } from \"contexts/LocalStorageContext\";\nimport { useLocale } from \"contexts/LocaleContext\";\nimport styled from \"@emotion/styled\";\n\nconst StyledPaper = styled(Paper)`\n  overflow: hidden;\n`;\n\nconst LocalStorageDebug = () => {\n  const { keys, getItem } = useLocalStorage();\n  const { t } = useLocale();\n\n  return (\n    <StyledPaper>\n      <Toolbar>\n        <Typography>{t(\"local_storage_data\")}</Typography>\n      </Toolbar>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"key\")}</TableCell>\n              <TableCell>{t(\"value\")}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {keys().map((key) => (\n              <TableRow key={key}>\n                <TableCell>{key}</TableCell>\n                <TableCell>{JSON.stringify(getItem(key))}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </StyledPaper>\n  );\n};\n\nexport default LocalStorageDebug;\n","import { useAccessToken } from \"../../contexts/AccessTokenContext\";\n\nconst AccessToken = () => {\n  const { accessToken } = useAccessToken();\n  return <div>AccessToken: {accessToken}</div>;\n};\n\nexport default AccessToken;\n","import { makeRoutes } from \"contexts/RouteContext\";\nimport { DefaultLayout } from \"components/common/Layout\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\nimport { useLocale } from \"contexts/LocaleContext\";\nimport { withAccessToken } from \"providers/AccessTokenProvider\";\n\nimport LocaleDebug from \"./LocaleDebug\";\nimport LocalStorageDebug from \"./LocalStorageDebug\";\nimport AccessToken from \"./AccessToken\";\n\nconst DebugContent = () =>\n  makeRoutes({\n    \"/locale\": LocaleDebug,\n    \"/local-storage\": LocalStorageDebug,\n    \"/access-token\": AccessToken,\n  });\n\nconst Debug = () => {\n  const { t } = useLocale();\n\n  const menuItems = [\n    {\n      path: \"/\",\n      title: \"Home\",\n      icon: <HomeIcon />,\n    },\n    {\n      path: \"/debug/local-storage\",\n      title: t(\"local_storage_data\"),\n      icon: <StorageIcon />,\n    },\n    {\n      path: \"/debug/locale\",\n      title: t(\"locale_data\"),\n      icon: <TranslateIcon />,\n    },\n    {\n      path: \"/debug/access-token\",\n      title: t(\"access_token\"),\n      icon: <VpnKeyIcon />,\n    },\n  ];\n\n  return (\n    <DefaultLayout title=\"debug\" menuItems={menuItems}>\n      <DebugContent />\n    </DefaultLayout>\n  );\n};\n\nconst DebugWithAccessToken = withAccessToken(Debug);\n\nexport default DebugWithAccessToken;\n","import { makeRoutes } from \"contexts/RouteContext\";\n\nimport Debug from \"./debug\";\n\nconst Home = () => {\n  return <div>Home</div>;\n};\n\nconst App = () =>\n  makeRoutes({\n    \"/\": Home,\n    \"/debug\": Debug,\n  });\n\nexport default App;\n","import { render } from \"react-dom\";\nimport { flowRight } from \"lodash\";\nimport { withLocalStorage } from \"providers/LocalStorageProvider\";\nimport { withLocale } from \"providers/LocaleProvider\";\nimport { withTheme } from \"providers/ThemeProvider\";\nimport { withRoute } from \"providers/RouteProvider\";\nimport { withAuth0 } from \"providers/Auth0Provider\";\n\nimport Containers from \"containers\";\n\nconst App = flowRight(\n  withLocalStorage,\n  withLocale,\n  withTheme,\n  withAuth0,\n  withRoute\n)(Containers);\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}